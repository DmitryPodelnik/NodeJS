? Что такое "соль"?
Криптографическая соль - добавка, использующаяся для внесения
  случайности в преобразования.
  В качестве добавок также известен "перец", образ которого - 
  случайные черные точки, в отличие от белых точек соли.

../images/anonim.jpg


? Как генерировать соль ?
Сложность генерации заключается в том, что сложно обеспечить
  достаточный уровень случайности (криптографический - от 128 бит)
  Неправильно: генерировать соль на основе известных (предсказуемых)
  данных.

? Как использовать соль ?
Соль "подмешивается" к исходным данным, после чего вычисляется хеш
  (либо другие крипто-функции, например, ЭЦП). Проще всего, значение
  соли соединяется с данными по конкатенации.

? Зачем ?
Соль усложняет подбор перебором. Набор слов - 100т. + вариации, 
  ошибки, цифры - х1000 = 100М - это очень мало с т.з. машинного
  перебора.

По работе с БД:
* использование даты-времени, включение ее в запрос
1) UPDATE ... SET DT = ?,  new Date()
2) UPDATE ... SET DT = CURRENT_TIMESTAMP
* UPDATE-запросы по неключевым полям
   UPDATE ... WHERE login=?
  - некоторые СУБД / IDE блокируют такие запросы с предупреждением
    "только ключевые поля"
  - такие запросы происходят медленнее (индексный поиск / полный поиск)  
  = стараться запросы строить с ID


Cookie:
Часть протокола HTTP - это данные, которые клиент (тот, кто отвечает на запрос) 
перешлет в своем ответе, а также будет включать во все следующие запросы к данному ресурсу 
в течении установленного времени.
Инициатор (сервер) в запрос включает заголовок:
    Set-Cookie: name=value
клиент принимает эту куку, в своих запросах, далее передает заголовок:
    Cookie: name=value
Команд удаления кук нет, для удаления выставляется одноименная кука с просроченной датой.

Сессия:
промежуток времени, в течении которого клиент-серверное взаимодействие считается одним сеансом.
Сессия уменьшает количество Cookie, сохраняя данные сеанса на сервере, на клиент 
передается только id/token сессии. По этому токену данные восстанавливаются при каждом запросе.
Традиционно, время сессии ограничивают:
    а) по вопросам безопасности;
    б) по увеличению сохраненных данных на сервере.

Организация сессии также возможно в нескольких вариантах: 
    а) в памяти;
    б) в виде файлах;
    в) в базе данных.

Альтернативой сессий можно считать API системы с токенами:
    при первом запросе передается данные авторизации, выдается токен;
    все последующие запросы включают в свой состав этот токен.


------------------------------------------------------------------------------
Схемы взаимодействия (архитектурные)
1. "Горизонтальная" - объекты взаимодействуют друг с другом. Любой объект
      может "связаться" с другим и передать ему данные.
2. "Вертикальная" - объекты взаимодействуют с выделенным узлом (объектом-сервером),
      через него передают данные друг другу.
*. RPC (Remote Procedure Calling) - объекты не столько передают данные, сколько
      вызывают методы других объектов, передавая аргументы.
*. Событийный цикл (~WinAPI) - постоянное (циклическое) наблюдение за 
      изменениями в окружении.
3. "Событийная" (наблюдатель) - объекты инициируют события, а также "слушает" события.